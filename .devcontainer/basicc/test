"use strict";
 // use for new version js code//
//alert(5+6)  dont use in node js //
const accountid= undefined
let accountemail = "afnan@gmail.com"
var accountpassword = "12345"
let address = "gujranwala"
let state; 
/*
dont use var for variable defined
data types
string =""
boolean= true/false
number= 2
bigint
null= standardlone val
undefined= 
symbol = unique
*/
//console.log(3+3);
//console.table([accountid,accountemail,accountpassword,address,state]);
let valueinnumber = Number(accountid)
//console.log(typeof valueinnumber);
//console.log(valueinnumber);
let isloggedin = "1";
let booleaninnumber = Boolean(isloggedin);
//console.log(booleaninnumber )
let string = 33
let stringnumber= String(string)
//console.log(stringnumber)
//console.log(typeof stringnumber)
//console.log(isloggedin+string)
let str1=4
let str2=6
 let str3 = str1+str2
//console.log(str3)
//console.log(1+"2")
//console.log(1+2+"5")
str2++
//console.log(str2)
//console.log(2>1)
//console.log(2<1)
//console.log(2==1)
//console.log(2!=1)

//console.log("02">1)
//console.log("02"==1)
//console.log("02">=1)

//they auto convert string into number
//console.log(null <1)
//console.log(null ==1)
//console.log(undefined <= 1)
//console.log(undefined != 1)
//strict check
//console.log(2===1)
/* values can be access into two types 
#premitive
string.number,boolean,bigint,symbol,undefined,null
#non premitive or access by reference
arrys,objects,functions
js is dynamic type langauges
*/
//arrys

let myarry = ["alikhan","abbas","mehmood"];
//console.log(myarry)

//objects

let myobj={
    name : "afnan",
    age  : 21,
    class : 15,
}
//console.log(myobj)
 //functions

let myfn = function () {
  //console.log("Hello from myfn");
};
//console.log(myfn)
//premitive(stack)
//non-premitive(heap)
//stack
let myname= "AFNAN KHALIL"
 let secondname= myname
secondname = "afnan"
//console.log(myname)
//console.log(secondname)
//heap
let user = {
    email : "afc$gmail",
    phone : 74747,
}
let userone = user
userone.email="aaaa#gmail"
//console.log(user)
//console.log(userone)
 
const name= "afnan khalil"
const report= 90
//console.log('the name of the person is ${name} and the report number is ${report} the end')
//console.log(name + report + " values")
const se = new String('technologia')
//console.log(se.__proto__)
//console.log(se.toUpperCase())
//console.log(se.toLowerCase())
//console.log(se.charAt(8))
//console.log(se.indexOf('i'))
const newstring = se.substring(-4,2)
//console.log(newstring)
const nstring = se.slice(-4,2)
//console.log(nstring)
const stringone = "    technologia "
//console.log(string)
//console.log(stringone)
//console.log(stringone.trim())
//console.log(stringone.replace('lo','pp'))
//console.log(stringone.includes('usman'))
//console.log(se.split('-'))
const score = 500
//console.log(score)
let num = new Number(39.999999)
//console.log(num.toString().length)
//console.log(num.toFixed(0))
//console.log(num.toPrecision(3))
const numm = 34000000000
//console.log(numm.toLocaleString('en-IN'))
//console.log(numm.toLocaleString())
//console.log(Math)
//console.log(Math.abs(-9))
//console.log(Math.abs(3))
//console.log(Math.round(3.7))
//console.log(Math.ceil(3.4))
//console.log(Math.floor(9.3))
//console.log(Math.min(2,4,5,7,9,0,1))
//console.log(Math.max(3,5,1,45,1,8,7,6,654,4,4))
//console.log(Math.random())
//console.log((Math.random()*10)+1)
//console.log(Math.floor(Math.random()*10)+1)
const max= 10
const min= 20
//console.log(Math.floor(Math.random()*(max-min+1))+min)
const myarr=[1,2,3,4,5,6,7,8,9,10]
const myarrt=['ali','akara','subhan']
let newarry= new Array(3,'abdullah',4,5,6,'abubaar')
//console.log(myarr[4])
//console.log(myarry)
//console.log(newarry)
myarr.push(11)
myarr.pop()
myarry.slice(1,6)
myarr.unshift(0)
myarr.shift()
//console.log(myarr)
//console.log(myarr)
//console.log(myarr.includes(13))
//console.log(myarr.indexOf(13))
//console.log(myarr.join())
//console.log(typeof myarr)
const arrry=[0,1,3,4,5,6,7]
const arryy=[1,2,3,4,5,6]
//console.log("A",arrry)
//console.log(arrry.slice(0,3))
//console.log(arrry)
//console.log("B",arryy)
//console.log(arryy.splice(0,3))
//console.log(arryy)

const marvel=["thor","spiderman","superman"]
const dc=["batman","flash","white"]
marvel.push(dc)
//console.log(marvel)
//const all=marvel.concat(dc)
//console.log(all)
const allheros=[...marvel, ...dc]
//console.log(allheros)
const realconst=[1,2,3,[3,4],[6,7,[8,9],10]]
//console.log(realconst.flat(Infinity))
//console.log(Array.from("afnan"))
//console.log(Array.isArray("afnan"))
//console.log(Array.from({name:"afnan"}))
const score1=100
const score2=200
const score3=300
//console.log(Array.of(score1,score2,score3))
const mysy= Symbol()
//.............objects...............
const myobject = {
  name : "afnan ",
  fullname : "afnan khalil",
  age: 19,
  email : "afnanakhalil@gmail.com",
  ph : 12345677,
  [mysy] : "mykey"
}
//console.log(myobject.name)
//console.log(myobject["fullname"])
//console.log(typeof myobject.mysy)
//console.log(myobject[mysy])
const  email= "afnankhalil@miectoff"
//console.log(myobject.email)
Object.freeze(email)
myobject.greeting = function()
{
  //console.log("helo my js code ")
}
//console.log(myobject.greeting())
myobject.greetingtwo = function()
{
  //console.log('helo my js code,' ${this.name});
}
//console.log(myobject.greetingtwo())
//..........singleton objects call by ............
const tinderuser= new Object() ////singleton object
//const tinderuser = {} //non singleton object
tinderuser.name="afnan"
tinderuser.id="abc123"
tinderuser.age= 19
//console.log(tinderuser)
const regularuser= {
  name : "afnan",
  user :{
    firstuser:
    {
      firstname : "afnan",
      secondname : "khalil"
    }
  }
}
//console.log(regularuser.user.firstuser)
const obj1 = {1:"a", 2:"b"}
const obj2 = {3:"c", 4:"d"}
//const obj3 = (obj1,obj2 )
const obj3 = Object.assign(obj1,obj2)
//const obj3= {...obj1,...obj2}//use for spread objects
//console.log(obj3)
//console.log(Object.keys(tinderuser))
//console.log(Object.values(tinderuser))
//console.log(Object.entries(tinderuser))
//console.log(Object.Length(tinderuser))
//console.log(tinderuser.hasOwnProperty('name'))
//console.log(tinderuser.hasOwnProperty('logged'))
//....object destructured.........
const course = {
  name : "java",
  price : 9999,
  instructor : "hitesh paaji"
}
//console.log(course.name.price)
const{instructor:inst}= course
//console.log(inst)
//.....json object ......
//{
  //"name":"afnan",
  //"course" : "js",
  //"price " : 9000
//}


//.....................functions .............
function myfunction(){
  //console.log("afnan"); 
}
myfunction()
function addnum(num1,num2){
  //console.log(num1+num2)
}
addnum(9,9)

myfunction()
function addnum(num1,num2){
  let result=num1+num2
 // return result
  return num1+num2
}
const result=addnum(8,8)
//console.log("result",result)
function logIn(username) {
  if(username === undefined){
    console.log("please enter the username ")
    return 
  }
  return `${username} just logged in`;
}

//console.log(logIn());

function logIn(username="sam") {
  if(!username){
    console.log("please enter the username ")
    return 
  }
  return `${username} just logged in`;
}
//console.log(logIn("afnan"));

function counterprice(val,val1,...num){
  return num
}
//console.log(counterprice(100,200,300,4000))
const userid = {
  name: "afnan",
  price: 888
}
function handleObject(anyobject) {
  //console.log(`username is ${anyobject.name} and the price is ${anyobject.price}`);
}

//handleObject(userid);
handleObject({
  name :"sam",
  price : 555
})
const arry=[233,555,333]
function objectarry(arryany)
{
  return arryany[1]

}
//console.log(objectarry(arry))
//.....global and local scope..........
const a=200
let b = 300
if(true){
let a=600
//console.log("inner " ,a)
}
//console.log(a)

function one ()
{
  const name = "afnan"
  function two()
  {
    const website = "youtube"
    console.log(name);
  }
  //console.log(website);
  //two()
}
//one()
if(true)
{
  const name = "afnan"
  if(name === "afnan")
  {
    const website= "youtube"
  //console.log(name +  website);
  }
//console.log(name);
}
//console.log(website);


//console.log(Addone(5))
function Addone(num){
  return num+1;
}
//console.log(add(5))

const addtwo= function(num1)
{
  return num1 + 2
}
//console.log(addtwo(5))
 
const userno={
  name : "afnan",
  price : 888,
  welcomemessage: function()
  {
    //console.log(`${this.name}  welcome to the websites`);
    //console.log(this);
  }
  }
  //userno.welcomemessage()
  //userno.name = "sam"
  //userno.welcomemessage()
  //console.log(this);
 //function chai()
 //{
  //let name ="afnan"
  //console.log(this);
 //}
 //chai()

 const chaii = ()=>{
  let userr= "afnan"
  //console.log(this);
 }
 chaii()

 const add=(num1,num2)=>
 {
    return num1+num2
 }
// console.log(add(3,6))
const add= (num1,num2) =>(num1+num2)
const add= (num1,num2) => num1+num2
const add= (num1,num2) => ({name : "afnan"});